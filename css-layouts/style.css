/* This is the universal selector
we apply it if we want a certain property applied to every element but
the property must not be inheritable eg a border top */
/* this selector has the lowest priority  meaning its very easy to override it*/
/* * {
     border-top:5px solid red;
} */
*{
    margin:0;
    padding:0;
    box-sizing:border-box;
}
body{
    color:#444;
    font-family:sans-serif;
    position:relative;
}
/*padding shorthand padding:20px 40px*/
/*the first one represents the top and bottom */
/* the second one represents left and right */
.main-header{
    background-color: #f7f7f7;
    padding:20px 40px;
    /* margin-bottom:60px; */
    /* height:80px; */
}
aside{
    background-color:#f7f7f7;
    border-top:5px solid #109Bad;
    border-bottom:5px solid #109Bad;
    padding:50px 40px;
    /* width:500px; */
}
.post-header{
    margin-bottom:40px;
}

article{
    /* margin-bottom:60px; */
}
h1{
    color:#0000ff;
    font-size: 26px;
    text-transform:uppercase;
    font-style:italic;
}
h2 {
    font-size:40px;
    margin-bottom:30px;
}

h3{
    font-size:30px;
    margin:40px  0  20px 0;
}

h4{
    font-size:20px;
    text-transform:uppercase;
    text-align:center;
    margin-bottom:30px;
}
h1,h2,h3,h4{
    color:#0000ff;
}
p{
    font-size:22px;
    line-height:1.5;
    margin-bottom:15px;
}

ol,ul{
    margin-left:50px;
    margin-bottom:20px;
}
li{
    font-size:20px;
    margin-bottom:10px;
}
nav a:link{
    margin-right:15px;
}
/*header p{
    font-style: italic;
}*/
/* footer p{
    font-size:16px;
} */
#author{
    font-size:18px;
    font-style:italic;
}
#copyright{
    font-size:16px;
    font-style:italic;
}
.related-author{
    font-size:18px;
    font-weight:bold;
}
/* ul{
    list-style:none;
} */

.related{
    list-style:none;
    margin-left:0;
}

/* styling the first element of the list*/
/* .first-li{
    font-weight:bold;
} */
/* styling the first element of the list*/
li:first-child{
    font-weight:bold;
}
li:last-child{
    font-style:italic;
    margin-bottom: 0;
}
li:nth-child(2){
    color:red;
}
/*to style even positions in the lists*/
/* li:nth-child(even){
    color:purple;
} */

/*to style odd positions in a list */
/* li:nth-child(odd){
    color:maroon;
}
    */

/* in the html code the paragraph <p> is the last-child element 
the first child element of the article element is the h2
*/
article p:last-child{
    color:red;
}

/*this is a misconception because it doesnt work
first-child refers to the first child of the parent element
and in this case p is not the first child h2 is the first child
p is the last-child though*/

/* article p:first-child{
    color:red;
} */


/*styling hyperlinks*/

/*this is not good practice.we should style the pseudoclass of the anchor tag*/
/* a {
    color:purple;
} */

/*to target all the ones that have a href attribut*/
a:link{
    color:purple;
    text-decoration:none; /*to remove the underline*/
}
/*to know that a link has been clicked*/
a:visited{
    color:red;
}
/*when hovering over a link*/
a:hover{
    color:darkturquoise;
    font-weight:bold;
    text-decoration:underline solid;
}
a:active{
    background-color:black;
    font-style:italic;
}
/*resolving conflicts for multiple declarations*/
/* the id selector is prioritized first */
/* then the class and the pseudoclasses */
/*then the element */
/* the universal selector is the last in the hierarchy of priority*/
/* if for instance you have two class selectors for the same element
the last one(in the css code)
 is chosen like in this case text class is chosen over copyright class*/
 /*if you add the important keyword then its prioritized */
/* footer p{
    color:green !important ;
} */
/* footer p{
    color:green;
}

.copyright{
    color:yellow;
}
.text{
    color:maroon;
}
/* #copyright{
    color:purple;
} */
nav{
    font-size:18px;
    /* text-align:left; */
}
.container{
    width:1200px;
    margin:0 auto;
    /* position:relative; */
}
/* you set the height to auto if its already specified in html */
/*images are inline-block level elements*/
.post-image{
    /* width:auto; */
    /* margin-top:20px; */
    /* margin-left:10px; */
    /* margin:100px; */

}
/*we know that anchor elements are inline elements*/
/*for inline elements the vertical margins and paddings remain unchanged */
/*the widths and the height properties do not apply */
/*they occupy only the required space for their elements */
/* nav a:link ,a:visited{
    /* background-color:orangered;
    color:white;
    margin:20px;
    padding:20px; */
    /* margin-right:20px;
    margin-top:10px;
    display:inline-block;

}  */
nav a:link:last-child,a:visited:last-child{
    margin-right:0;
}
/*the inline-block properties is where the elements occupies the content's space only*/
/*therefore causes no line breaks*/
/*but the box model applies as shown ie paddings and margins apply*/
.new_button{
    font-size:20px;
    padding:20px;
    cursor:pointer;

    position:absolute;
    bottom:50px;
    right:50px;
}
/*styling pseudo-elements */
/*for example if we want to style the first letter of a paragraph or an h1*/
/* h1::first-letter{
    font-style:normal;
    margin-right:5px;
}
h2::first-letter{
    font-size:60px;
} */

/*first line of every paragraph*/
/* p::first-line{
    color:red;
} */

/*the adjacent sibling is the element after that element*/
/*sibling elements are elements in the same container*/
/*am painting  first-line of a p element that comes after the h3*/
/* h3 + p::first-line{
    color:red;
} */

h2{
    /* background-color:orange; */
    position:relative;
}
/*the before and after pseudoelements */
h2::after{
    content:"TOP";
    background-color:#ffe70e;
    color:black;
    font-size:16px;
    font-weight:bold;
    display:inline-block; /*we have changed it to inline-block so we 
    can apply the box model properties like padding*/
    padding:5px 10px;  
    position:absolute;
    top:-15px;
    right:-25px;
}

/*FLOATS*/
/*
.author-img{
    float:left;
    margin-bottom:40px;
}
.author{
    float:left;
    margin-top:10px;
    margin-left:20px;
}
h1{
    float:left; 
}

nav{
    float:right;
} 
.clear{
    clear:both;
}
/*the clearfix hack*/
/*
.clearfix::after{
    content: '';
    display:block;
    clear:both
}
/* article{
    /* background-color:green; */
    /* width:825px;
    float :left;
}  */
/* aside{
    /* background-color:red; */
    /* width:300px;
    float:right;
   
/* } */
/* footer{
    /* background-color:yellow; */
    /* clear:both;
} */ 

/*FLEXBOX*/
/*when you have only two items that you need to apply display flex*/
/*and you need space between them you use the justify-content:space-between*/
.main-header{
    display:flex;
    justify-content:space-between;
    align-items:center;
}
.author-box{
    display:flex;
    align-items:center;
    margin-bottom:20px;

}
.author-box p{
    margin-bottom:0;
    margin-left:15px;
}
.related-post{
    display:flex;
    align-items:center;
    gap:20px;
    margin-bottom:30px;
}
.related-author{
    margin-bottom:0;
    font-size:14px;
    font-weight:normal;
    font-style:italic;
}
.related-link:link{
    font-size:17px;
    font-weight:bold;
    font-style:normal;
    margin-bottom:5px;
    display:inline-block;
}
/* .row{
    display:flex;
    gap:75px;
    margin-bottom:60px;
    align-items:flex-start;
} */
/*flex:1 means grow 1 and shrink is 1 and flex-basis is 0*/
/*css calculates the width for itself but we must specify the width of the aside*/
/* article{
    background-color:purple; */ 
    /* flex:0 0 825px;
    flex:1;
    margin-bottom:0;
}
/* aside{
    flex: 0 0 300px;
    background-color:#109Bad;
    align-self:flex-start;
} */

/*CSS-GRID-LAYOUT*/
.container{
    display:grid;
    grid-template-columns:1fr 300px;
    column-gap:75px;
    row-gap:60px;
    align-items:start;
}
.main-header{
    grid-column:1 / -1;
}
article{}
aside{}
footer{

    grid-column:1/-1;
}